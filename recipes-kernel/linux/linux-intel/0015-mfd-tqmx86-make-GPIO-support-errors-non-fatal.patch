From a870e83c4663fa046e90d5d10cc21f4b9425c41b Mon Sep 17 00:00:00 2001
From: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
Date: Mon, 17 Apr 2023 16:20:12 +0200
Subject: [PATCH] mfd: tqmx86: make GPIO support errors non-fatal

tqmx86_board_id_to_gpio_pdata() fails for unknown board IDs, which would
prevent the whole tqmx86 probe from succeeding, even when I2C and WDT
could work just fine.

Split the tqmx86_devs array into separate definitions and register them
individually. For consistency, tqmx86_i2c_soft_dev is changed to a
single struct definition as well.

Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
---
 drivers/mfd/tqmx86.c | 64 +++++++++++++++++++++-----------------------
 1 file changed, 30 insertions(+), 34 deletions(-)

diff --git a/drivers/mfd/tqmx86.c b/drivers/mfd/tqmx86.c
index 0cbebcbed9a26..2e13765bfcdea 100644
--- a/drivers/mfd/tqmx86.c
+++ b/drivers/mfd/tqmx86.c
@@ -98,14 +98,12 @@ static struct ocores_i2c_platform_data ocores_platform_data = {
 	.devices = tqmx86_i2c_devices,
 };
 
-static const struct mfd_cell tqmx86_i2c_soft_dev[] = {
-	{
-		.name = "ocores-i2c",
-		.platform_data = &ocores_platform_data,
-		.pdata_size = sizeof(ocores_platform_data),
-		.resources = tqmx_i2c_soft_resources,
-		.num_resources = ARRAY_SIZE(tqmx_i2c_soft_resources),
-	},
+static const struct mfd_cell tqmx86_i2c_soft_dev = {
+	.name = "ocores-i2c",
+	.platform_data = &ocores_platform_data,
+	.pdata_size = sizeof(ocores_platform_data),
+	.resources = tqmx_i2c_soft_resources,
+	.num_resources = ARRAY_SIZE(tqmx_i2c_soft_resources),
 };
 
 static const struct tqmx86_gpio_platform_data gpio_platform_data_come = {
@@ -131,28 +129,22 @@ static const struct tqmx86_gpio_platform_data gpio_platform_data_smarc21_full =
 	.dir_input_mask = 0x3fc0, /* 6 outputs, 8 inputs */
 };
 
-enum tqmx86_cells {
-	TQMX86_WDT,
-	TQMX86_GPIO,
+static struct mfd_cell tqmx86_gpio_dev = {
+	.name = "tqmx86-gpio",
+	.resources = tqmx_gpio_resources,
+	.num_resources = ARRAY_SIZE(tqmx_gpio_resources),
+	.ignore_resource_conflicts = true,
 };
 
-static struct mfd_cell tqmx86_devs[] = {
-	[TQMX86_WDT] = {
-		.name = "tqmx86-wdt",
-		.resources = tqmx_watchdog_resources,
-		.num_resources = ARRAY_SIZE(tqmx_watchdog_resources),
-		.ignore_resource_conflicts = true,
-	},
-	[TQMX86_GPIO] = {
-		.name = "tqmx86-gpio",
-		.resources = tqmx_gpio_resources,
-		.num_resources = ARRAY_SIZE(tqmx_gpio_resources),
-		.ignore_resource_conflicts = true,
-	},
+static struct mfd_cell tqmx86_watchdog_dev = {
+	.name = "tqmx86-wdt",
+	.resources = tqmx_watchdog_resources,
+	.num_resources = ARRAY_SIZE(tqmx_watchdog_resources),
+	.ignore_resource_conflicts = true,
 };
 
 static const struct tqmx86_gpio_platform_data *
-tqmx86_board_id_to_gpio_pdata(u8 board_id, u8 sauc, u8 pld_rev)
+tqmx86_board_id_to_gpio_pdata(struct device *dev, u8 board_id, u8 sauc, u8 pld_rev)
 {
 	switch (board_id) {
 	case TQMX86_REG_BOARD_ID_E38M:
@@ -177,6 +169,7 @@ tqmx86_board_id_to_gpio_pdata(u8 board_id, u8 sauc, u8 pld_rev)
 			? &gpio_platform_data_smarc21_full
 			: &gpio_platform_data_smarc21;
 	default:
+		dev_warn(dev, "No GPIO support available\n");
 		return ERR_PTR(-EINVAL);
 	}
 }
@@ -353,23 +346,26 @@ static int tqmx86_probe(struct platform_device *pdev)
 			tqmx_i2c_soft_resources[0].flags = 0;
 
 		err = devm_mfd_add_devices(dev, PLATFORM_DEVID_NONE,
-					   tqmx86_i2c_soft_dev,
-					   ARRAY_SIZE(tqmx86_i2c_soft_dev),
+					   &tqmx86_i2c_soft_dev, 1,
 					   NULL, 0, NULL);
 		if (err)
 			return err;
 	}
 
-	gpio_pdata = tqmx86_board_id_to_gpio_pdata(board_id, sauc, pld_rev);
-	if (IS_ERR(gpio_pdata))
-		return PTR_ERR(gpio_pdata);
+	gpio_pdata = tqmx86_board_id_to_gpio_pdata(dev, board_id, sauc, pld_rev);
+	if (!IS_ERR(gpio_pdata)) {
+		tqmx86_gpio_dev.platform_data = (void *)gpio_pdata;
+		tqmx86_gpio_dev.pdata_size = sizeof(*gpio_pdata);
 
-	tqmx86_devs[TQMX86_GPIO].platform_data = (void *)gpio_pdata;
-	tqmx86_devs[TQMX86_GPIO].pdata_size = sizeof(*gpio_pdata);
+		err = devm_mfd_add_devices(dev, PLATFORM_DEVID_NONE,
+					   &tqmx86_gpio_dev, 1,
+					   NULL, 0, NULL);
+		if (err)
+			return err;
+	}
 
 	return devm_mfd_add_devices(dev, PLATFORM_DEVID_NONE,
-				    tqmx86_devs,
-				    ARRAY_SIZE(tqmx86_devs),
+				    &tqmx86_watchdog_dev, 1,
 				    NULL, 0, NULL);
 }
 
